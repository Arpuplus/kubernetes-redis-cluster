#!/bin/bash
# Copyright 2017 Ismail KABOUBI
# Forked on 2018 Michael Fayez @ARPUPLUS
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script determines whether the pod that executes it will be a Redis Sentinel, Master, or Slave
# The redis-ha Helm chart signals Sentinel status with environment variables. If they are not set, the newly
# launched pod will scan K8S to see if there is an active master. If not, it uses a deterministic means of
# sensing whether it should launch as master then writes master or slave to the label called redis-role
# appropriately. It's this label that determines which LB a pod can be seen through.
#
# The redis-role=master pod is the key for the cluster service to target the Pod.
#
# Pods also set the labels podIP and runID. RunID is the first few characters of the unique run_id value
# generated by each Redis sever.
#

echo "Starting redis launcher"
echo "Setting labels"
label-updater.sh & plabeler=$!

echo "Selecting proper service to execute"
# Define config file locations
MASTER_CONF=/etc/redis/redis-master.conf
SLAVE_CONF=/etc/redis/redis-slave.conf

# We will initial start as master, and Check if we have to drop to be a slave!
# we are using the function of f(r,N)= r*N,((r*N)+1)
# where n is the number of desired (master+replicas), and N is the node number
#N(2,0)= 0 , 1 ... those are the desired first master and its associated replica.
#N(2,1)= 2 , 3 ... those are the desired second master and its associated replica.
## and so on!
### for number of (master+replica) = 3 (master + 2 replica), we should use N(r,N)=[r*N, ((r*N)+1), ((r*N)+2)]
### and this is not implemented yet.
whatiam=`hostname | cut -d\- -f2`
echo "This is a supposed $whatiam host.."
if [ "$whatiam" == "master" ]; then
  myslave=`hostname | sed s/master/slave/g` #check if my slave is master!
  slaverole=`redis-cli -h $myslave info replication | grep role`
    if [ "$slaverole" == "role:master" ]; then
      echo "My Slave $myslave is Currently the master taking over my role!, I'll fallback to be slave"
      launchslave ($myslave) ## replicate the salve that is Currently master!
    elif [ "$slaverole" == "role:slave" || true ]; then
      echo "My slave $myslave is a slave or there is no slave yet.., I'll start as a normal master"
      launchmaster(`hostname`) ## start the normal master
    fi
elif [ "$whatiam" == "slave" ]; then
  mymaster= `hostname | sed s/slave/master/g`
  #check if my master is slave!
  masterrole=`redis-cli -h $mymaster info replication | grep role`
     if [ "$masterrole" == "role:master" ]; then
       echo "My Master $mymaster is Currently the master, I'll go to be normal slave."
       launchslave ($mymaster) ## replicate the master
     elif [ "$masterrole" == "role:slave" ]; then
       echo "Master $mymaster is slave, I'll start master.. NOT NORMAL condition"
       launchmaster($mymaster) ## start master this is not normal to happen
fi
# Only sets AUTH if the ENV var REDIS_PASS is set.
REDISAUTH=""
[ -n "$REDIS_PASS" ] && REDISAUTH="-a $REDIS_PASS" || REDISAUTH=""

# Launch master when `MASTER` environment variable is set
function launchmaster() {
  # If we know we're a master, update the labels right away
  kubectl label --overwrite pod $HOSTNAME redis-role="master"
  # echo "Using config file $MASTER_CONF"
  if [[ ! -e /redis-master-data ]]; then
    echo "Redis master data doesn't exist, data won't be persistent!"
    mkdir /redis-master-data
  fi

  if [ -n "$REDIS_PASS" ]; then
    sed -i "s/# requirepass/requirepass ${REDIS_PASS} \n#/" $CONF
  fi

  redis-server $MASTER_CONF --protected-mode no $@
}

# Launch slave when `SLAVE` environment variable is set
function launchslave() {
  kubectl label --overwrite pod $HOSTNAME redis-role="slave"
  echo "Using config file $SLAVE_CONF"
  if [[ ! -e /redis-master-data ]]; then
    echo "Redis master data doesn't exist, data won't be persistent!"
    mkdir /redis-master-data
  fi

  mymasterIP=`dig +short (hostname | sed s/slave/master/g)`

  if [ -n "$REDIS_PASS" ]; then
    sed -i "s/# masterauth/masterauth ${REDIS_PASS} \n#/" $SLAVE_CONF
    sed -i "s/# requirepass/requirepass ${REDIS_PASS} \n#/" $SLAVE_CONF
  fi

  sed -i "s/slaveof.*/slaveof ${mymasterIP}:6379/" $SLAVE_CONF
    redis-server $SLAVE_CONF --protected-mode no $@
}
